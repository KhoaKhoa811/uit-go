// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v3.12.4
// source: pkg/pb/driver.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetAvailableDriversNearUserRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Latitude      float64                `protobuf:"fixed64,1,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude     float64                `protobuf:"fixed64,2,opt,name=longitude,proto3" json:"longitude,omitempty"`
	MaxDriver     int32                  `protobuf:"varint,3,opt,name=max_driver,json=maxDriver,proto3" json:"max_driver,omitempty"`
	Radius        int32                  `protobuf:"varint,4,opt,name=radius,proto3" json:"radius,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAvailableDriversNearUserRequest) Reset() {
	*x = GetAvailableDriversNearUserRequest{}
	mi := &file_pkg_pb_driver_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAvailableDriversNearUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAvailableDriversNearUserRequest) ProtoMessage() {}

func (x *GetAvailableDriversNearUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_driver_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAvailableDriversNearUserRequest.ProtoReflect.Descriptor instead.
func (*GetAvailableDriversNearUserRequest) Descriptor() ([]byte, []int) {
	return file_pkg_pb_driver_proto_rawDescGZIP(), []int{0}
}

func (x *GetAvailableDriversNearUserRequest) GetLatitude() float64 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *GetAvailableDriversNearUserRequest) GetLongitude() float64 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *GetAvailableDriversNearUserRequest) GetMaxDriver() int32 {
	if x != nil {
		return x.MaxDriver
	}
	return 0
}

func (x *GetAvailableDriversNearUserRequest) GetRadius() int32 {
	if x != nil {
		return x.Radius
	}
	return 0
}

type GetAvailableDriversNearUserResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Drivers       []int64                `protobuf:"varint,2,rep,packed,name=drivers,proto3" json:"drivers,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAvailableDriversNearUserResponse) Reset() {
	*x = GetAvailableDriversNearUserResponse{}
	mi := &file_pkg_pb_driver_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAvailableDriversNearUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAvailableDriversNearUserResponse) ProtoMessage() {}

func (x *GetAvailableDriversNearUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_driver_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAvailableDriversNearUserResponse.ProtoReflect.Descriptor instead.
func (*GetAvailableDriversNearUserResponse) Descriptor() ([]byte, []int) {
	return file_pkg_pb_driver_proto_rawDescGZIP(), []int{1}
}

func (x *GetAvailableDriversNearUserResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *GetAvailableDriversNearUserResponse) GetDrivers() []int64 {
	if x != nil {
		return x.Drivers
	}
	return nil
}

type SendNotificationToDriverRequest struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	DriverId         int64                  `protobuf:"varint,1,opt,name=driver_id,json=driverId,proto3" json:"driver_id,omitempty"`
	PickupLatitude   float64                `protobuf:"fixed64,2,opt,name=pickup_latitude,json=pickupLatitude,proto3" json:"pickup_latitude,omitempty"`
	PickupLongitude  float64                `protobuf:"fixed64,3,opt,name=pickup_longitude,json=pickupLongitude,proto3" json:"pickup_longitude,omitempty"`
	DropoffLatitude  float64                `protobuf:"fixed64,4,opt,name=dropoff_latitude,json=dropoffLatitude,proto3" json:"dropoff_latitude,omitempty"`
	DropoffLongitude float64                `protobuf:"fixed64,5,opt,name=dropoff_longitude,json=dropoffLongitude,proto3" json:"dropoff_longitude,omitempty"`
	Distance         float64                `protobuf:"fixed64,6,opt,name=distance,proto3" json:"distance,omitempty"`
	TripFare         int64                  `protobuf:"varint,7,opt,name=trip_fare,json=tripFare,proto3" json:"trip_fare,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *SendNotificationToDriverRequest) Reset() {
	*x = SendNotificationToDriverRequest{}
	mi := &file_pkg_pb_driver_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendNotificationToDriverRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendNotificationToDriverRequest) ProtoMessage() {}

func (x *SendNotificationToDriverRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_driver_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendNotificationToDriverRequest.ProtoReflect.Descriptor instead.
func (*SendNotificationToDriverRequest) Descriptor() ([]byte, []int) {
	return file_pkg_pb_driver_proto_rawDescGZIP(), []int{2}
}

func (x *SendNotificationToDriverRequest) GetDriverId() int64 {
	if x != nil {
		return x.DriverId
	}
	return 0
}

func (x *SendNotificationToDriverRequest) GetPickupLatitude() float64 {
	if x != nil {
		return x.PickupLatitude
	}
	return 0
}

func (x *SendNotificationToDriverRequest) GetPickupLongitude() float64 {
	if x != nil {
		return x.PickupLongitude
	}
	return 0
}

func (x *SendNotificationToDriverRequest) GetDropoffLatitude() float64 {
	if x != nil {
		return x.DropoffLatitude
	}
	return 0
}

func (x *SendNotificationToDriverRequest) GetDropoffLongitude() float64 {
	if x != nil {
		return x.DropoffLongitude
	}
	return 0
}

func (x *SendNotificationToDriverRequest) GetDistance() float64 {
	if x != nil {
		return x.Distance
	}
	return 0
}

func (x *SendNotificationToDriverRequest) GetTripFare() int64 {
	if x != nil {
		return x.TripFare
	}
	return 0
}

type SendNotificationToDriverResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendNotificationToDriverResponse) Reset() {
	*x = SendNotificationToDriverResponse{}
	mi := &file_pkg_pb_driver_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendNotificationToDriverResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendNotificationToDriverResponse) ProtoMessage() {}

func (x *SendNotificationToDriverResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_driver_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendNotificationToDriverResponse.ProtoReflect.Descriptor instead.
func (*SendNotificationToDriverResponse) Descriptor() ([]byte, []int) {
	return file_pkg_pb_driver_proto_rawDescGZIP(), []int{3}
}

func (x *SendNotificationToDriverResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *SendNotificationToDriverResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_pkg_pb_driver_proto protoreflect.FileDescriptor

const file_pkg_pb_driver_proto_rawDesc = "" +
	"\n" +
	"\x13pkg/pb/driver.proto\x12\x06driver\"\x95\x01\n" +
	"\"GetAvailableDriversNearUserRequest\x12\x1a\n" +
	"\blatitude\x18\x01 \x01(\x01R\blatitude\x12\x1c\n" +
	"\tlongitude\x18\x02 \x01(\x01R\tlongitude\x12\x1d\n" +
	"\n" +
	"max_driver\x18\x03 \x01(\x05R\tmaxDriver\x12\x16\n" +
	"\x06radius\x18\x04 \x01(\x05R\x06radius\"W\n" +
	"#GetAvailableDriversNearUserResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status\x12\x18\n" +
	"\adrivers\x18\x02 \x03(\x03R\adrivers\"\xa3\x02\n" +
	"\x1fSendNotificationToDriverRequest\x12\x1b\n" +
	"\tdriver_id\x18\x01 \x01(\x03R\bdriverId\x12'\n" +
	"\x0fpickup_latitude\x18\x02 \x01(\x01R\x0epickupLatitude\x12)\n" +
	"\x10pickup_longitude\x18\x03 \x01(\x01R\x0fpickupLongitude\x12)\n" +
	"\x10dropoff_latitude\x18\x04 \x01(\x01R\x0fdropoffLatitude\x12+\n" +
	"\x11dropoff_longitude\x18\x05 \x01(\x01R\x10dropoffLongitude\x12\x1a\n" +
	"\bdistance\x18\x06 \x01(\x01R\bdistance\x12\x1b\n" +
	"\ttrip_fare\x18\a \x01(\x03R\btripFare\"T\n" +
	" SendNotificationToDriverResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage2\xf6\x01\n" +
	"\rDriverService\x12v\n" +
	"\x1bGetAvailableDriversNearUser\x12*.driver.GetAvailableDriversNearUserRequest\x1a+.driver.GetAvailableDriversNearUserResponse\x12m\n" +
	"\x18SendNotificationToDriver\x12'.driver.SendNotificationToDriverRequest\x1a(.driver.SendNotificationToDriverResponseB\n" +
	"Z\b./pkg/pbb\x06proto3"

var (
	file_pkg_pb_driver_proto_rawDescOnce sync.Once
	file_pkg_pb_driver_proto_rawDescData []byte
)

func file_pkg_pb_driver_proto_rawDescGZIP() []byte {
	file_pkg_pb_driver_proto_rawDescOnce.Do(func() {
		file_pkg_pb_driver_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_pkg_pb_driver_proto_rawDesc), len(file_pkg_pb_driver_proto_rawDesc)))
	})
	return file_pkg_pb_driver_proto_rawDescData
}

var file_pkg_pb_driver_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_pkg_pb_driver_proto_goTypes = []any{
	(*GetAvailableDriversNearUserRequest)(nil),  // 0: driver.GetAvailableDriversNearUserRequest
	(*GetAvailableDriversNearUserResponse)(nil), // 1: driver.GetAvailableDriversNearUserResponse
	(*SendNotificationToDriverRequest)(nil),     // 2: driver.SendNotificationToDriverRequest
	(*SendNotificationToDriverResponse)(nil),    // 3: driver.SendNotificationToDriverResponse
}
var file_pkg_pb_driver_proto_depIdxs = []int32{
	0, // 0: driver.DriverService.GetAvailableDriversNearUser:input_type -> driver.GetAvailableDriversNearUserRequest
	2, // 1: driver.DriverService.SendNotificationToDriver:input_type -> driver.SendNotificationToDriverRequest
	1, // 2: driver.DriverService.GetAvailableDriversNearUser:output_type -> driver.GetAvailableDriversNearUserResponse
	3, // 3: driver.DriverService.SendNotificationToDriver:output_type -> driver.SendNotificationToDriverResponse
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_pkg_pb_driver_proto_init() }
func file_pkg_pb_driver_proto_init() {
	if File_pkg_pb_driver_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pkg_pb_driver_proto_rawDesc), len(file_pkg_pb_driver_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pkg_pb_driver_proto_goTypes,
		DependencyIndexes: file_pkg_pb_driver_proto_depIdxs,
		MessageInfos:      file_pkg_pb_driver_proto_msgTypes,
	}.Build()
	File_pkg_pb_driver_proto = out.File
	file_pkg_pb_driver_proto_goTypes = nil
	file_pkg_pb_driver_proto_depIdxs = nil
}
